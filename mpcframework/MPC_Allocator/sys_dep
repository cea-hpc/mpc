############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - PERACHE Marc marc.perache@cea.fr                                 #
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     #
#                                                                      #
########################################################################
# MPC Module System Dependency Check

SCTK_CHECK_HEADER assert.h
SCTK_CHECK_HEADER errno.h
SCTK_CHECK_HEADER fcntl.h
SCTK_CHECK_HEADER limits.h
SCTK_CHECK_HEADER malloc.h
SCTK_CHECK_HEADER pthread.h
SCTK_CHECK_HEADER signal.h
SCTK_CHECK_HEADER stdarg.h
SCTK_CHECK_HEADER stdio.h
SCTK_CHECK_HEADER stdlib.h
SCTK_CHECK_HEADER string.h
SCTK_CHECK_HEADER sys/mman.h
SCTK_CHECK_HEADER sys/resource.h
SCTK_CHECK_HEADER sys/stat.h
SCTK_CHECK_HEADER sys/time.h
SCTK_CHECK_HEADER sys/types.h
SCTK_CHECK_HEADER unistd.h
SCTK_CHECK_FUNC abort
SCTK_CHECK_FUNC close
SCTK_CHECK_FUNC getenv
SCTK_CHECK_FUNC getpagesize
SCTK_CHECK_FUNC getpid
SCTK_CHECK_FUNC lseek
SCTK_CHECK_FUNC malloc
SCTK_CHECK_FUNC memcpy
SCTK_CHECK_FUNC memset
SCTK_CHECK_FUNC mmap
SCTK_CHECK_FUNC mprotect
SCTK_CHECK_FUNC munmap
SCTK_CHECK_FUNC open
SCTK_CHECK_FUNC perror
SCTK_CHECK_FUNC read
SCTK_CHECK_FUNC rename
SCTK_CHECK_FUNC sbrk
SCTK_CHECK_FUNC sigaction
SCTK_CHECK_FUNC sigemptyset
SCTK_CHECK_FUNC sprintf
SCTK_CHECK_FUNC strlen
SCTK_CHECK_FUNC sysconf
SCTK_CHECK_FUNC write

SCTK_CHECK_LIB_HWLOC

#TODO rename this into hwloc as now NUMA is supported via hwloc
SCTK_CHECK_OPTION -DHAVE_HWLOC
SCTK_CHECK_FUNC_NOFAIL __malloc_initialize_hook
if test "${SCTK_SCTK_CHECK_FUNC_RES}" = 0; then 
SCTK_CHECK_OPTION -DENABLE_GLIBC_ALLOC_HOOKS
fi

#TODO maybe reverse this in DISABLE_STATIC for unit test and default static for others
SCTK_CHECK_OPTION -DDISABLE_STATIC
#TODO move this or remove if already have in MPC build system
#SCTK_CHECK_OPTION -DNDEBUG
#SCTK_CHECK_OPTION -DSCTK_ALLOC_DEBUG

#optional enable of mremap support
SCTK_CHECK_FUNC_NOFAIL mremap
if test "${SCTK_SCTK_CHECK_FUNC_RES}" = 0 ; then
	SCTK_CHECK_OPTION -DHAVE_MREMAP
fi

#check if have numaif.h to enable NUMA debug functions (only on Linux)
if test "${SCTK_DEBUG}" = 1; then
	SCTK_CHECK_HEADER_NOFAIL numaif.h
	if test "${SCTK_SCTK_CHECK_HEADER_RES}" = 0 ; then
		SCTK_CHECK_OPTION -DHAVE_NUMAIF_H
		#check if have move_page
		SCTK_CHECK_FUNC_NOFAIL move_pages
		if test "${SCTK_SCTK_CHECK_HEADER_RES}" = 0 ; then
			SCTK_CHECK_OPTION -DHAVE_MOVE_PAGES
		fi
	fi
fi

#check for valgrind support
if [ "${SCTK_VALGRIND_MEMCHECK}" = '1' ]; then
	SCTK_CHECK_HEADER valgrind/valgrind.h
	SCTK_CHECK_HEADER valgrind/memcheck.h
	SCTK_CHECK_OPTION -DHAVE_MEMCHECK_H
fi

begin_section "Page migration"
check_binding
end_section
