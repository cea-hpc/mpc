#!/bin/sh
############################# MPC License ############################## 
# Wed Nov 19 15:19:19 CET 2008                                         # 
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          # 
#                                                                      # 
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            # 
# This file is part of the MPC Runtime.                                # 
#                                                                      # 
# This software is governed by the CeCILL-C license under French law   # 
# and abiding by the rules of distribution of free software.  You can  # 
# use, modify and/ or redistribute the software under the terms of     # 
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     # 
# following URL http://www.cecill.info.                                # 
#                                                                      # 
# The fact that you are presently reading this means that you have     # 
# had knowledge of the CeCILL-C license and that you accept its        # 
# terms.                                                               # 
#                                                                      # 
# Authors:                                                             # 
#   - PERACHE Marc marc.perache@cea.fr                                 # 
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     # 
#   - ADAM Julien adamj@paratools.com                                  #
#                                                                      # 
######################################################################## 

sctk_echo "Generating MPC install cleaner"

cat << EOF > bin/mpc_cleaner
#!/bin/sh

INSTALL_LIST=""
USER_AWARE=no
SUPER_USER=no
DRY_RUN=no
mode="dry"

if test -n "\$MANAGER_COLOR"; then
	RED="\`printf "\033[1;31m"\`"
	YELLOW="\`printf "\033[1;33m"\`"
	GREEN="\`printf "\033[1;32m"\`"
	BLUE="\`printf "\033[1;36m"\`"
	DEF="\`printf "\033[0;0m"\`"
fi

show_help()
{
	printf "Usage: mpc_cleaner --force [--list|-l] [--dry-run|-d] [--rm-link] [--rm-install] [--color|-c]\n"
}

error()
{
	printf "\${RED}Error: \$*\${DEF}\n"
	exit 42
}

safe_exec()
{
	the_command="\$@"
	if test "\$DRY_RUN" = "no"; then
		eval "\$the_command" || error "running \$@"
	else
		printf "\${YELLOW}DRY-RUN: \$the_command\${DEF}\n"
	fi
}

test_user_aware()
{
	if test "\$USER_AWARE" != "yes"; then
		printf "To ensure you know what you are doing, please provide '--force' option to the cleaner\n"
		exit 2
	fi
}
detect_home_install()
{
	if test -d \${HOME}/.mpcompil; then
		INSTALL_LIST="\`find \${HOME}/.mpcompil -name "mpc_install_path"\`"
	else
		INSTALL_LIST=""
	fi
}

list_installs()
{
	printf "\${BLUE}List of MPC installations referenced by \${HOME}/.mpcompil/ folder:\${DEF}\n"
	for el in \$INSTALL_LIST
	do
		install_link="\`dirname \$el\`"
		install_link_hash="\`basename \$install_link\`"
		install_location="\`cat \$el\`"
		
		printf " * Configuration: \${install_link_hash}\n"
		printf "    --> \${GREEN}\$install_location\${DEF}\n"
	done
}

rm_home_link()
{
	test_user_aware
	printf "\${BLUE}Removing broken HOME references to MPC installation in \${HOME}/.mpcompil/ folder:\${DEF}\n"
	for el in \$INSTALL_LIST
	do
		install_link="\`dirname \$el\`"
		install_link_hash="\`basename \$install_link\`"
		install_location="\`cat \$el\`"

		if test ! -f \${install_location}/mpcvars.sh; then
			printf " * Removing \$install_link_hash (\$install_location)\n"
			
			#sanity check
			if test -z "\`echo \${install_link} | \\egrep "^\${HOME}/.mpcompil/[a-zA-Z0-9]+$"\`"; then
				printf "Huh huh... I was going to delete \${install_link}\n"
				printf "I am not sure about the path.. Please check the script !\n"
				exit 1
			fi

			safe_exec rm -rf \${install_link}
		fi
	done
}

rm_real_install()
{
	test_user_aware
	printf "\${BLUE}Removing MPC installations referenced by \${HOME}/.mpcompil/ folder:\${DEF}\n"
	for el in \$INSTALL_LIST
	do
		install_link="\`dirname \$el\`"
		install_link_hash="\`basename \$install_link\`"
		install_location="\`cat \$el\`"

		#warning from here, we will delete a real installation !!!!!
		if test -n "\${install_location}" -a -f \${install_location}/mpcvars.sh; then
			commandline="rm -rf \${install_location}/"
			printf " * Found \${GREEN}\$install_location\${DEF}\n"
			printf "    --> Command about to be run: \${RED}\$commandline\${DEF}\n"
			printf "    --> Is it really what you want to do [Y/n]? >> "
			res=""
			read res
			while test "\$res" != "Y" -a "\$res" != "n";
			do
				printf "\r    --> Please type 'Y' or 'n' !                >> "
				read res
			done

			if test "\$res" = "Y"; then
				printf "    --> Removing the installation and its HOME reference\n"
				safe_exec \$commandline
			
				#sanity check
				if test -z "\`echo \$install_link | \\egrep "^\${HOME}/.mpcompil/[a-zA-Z0-9]+$"\`"; then
					printf "Huh huh... I was going to delete \${install_link}\n"
					printf "I am not sure about the path.. Please check the script !\n"
					exit 1
				fi
				safe_exec rm -rf \${install_link}
			else
				printf "    --> Skipping this installation\n"
			fi
		fi
	done
}

run()
{
	case \$mode in
		list)
			list_installs
		;;
		link)
			rm_home_link
		;;
		install)
			rm_real_install
		;;
	esac
}

for arg in "\$@"
do
	case \$arg in
		-h|--help|-help)
			show_help
			exit 0
			;;
		--force)
			USER_AWARE=yes
			;;
		--root)
			SUPER_USER=yes
			;;
		--list|-l)
			mode="list"
			;;
		--dry-run|-dry-run|-dr|-d)
			DRY_RUN=yes
			;;
		--rm-link)
			mode="link"
			;;
		--rm-install)
			mode="install"
			;;
	esac
done

detect_home_install

if test "\`id -u\`" = "0" -a "\${SUPER_USER}" != "yes" ; then
	#if root
	printf "This script should not be executed as root !\n"
	printf "We prefer aborting to avoid any errors (force this with --root)\n"
	exit 1
fi

if test -z "\$INSTALL_LIST";
then
	printf "Your HOME directory does not contain any MPC installation.\n"
	printf "Nothing to clean.\n"
	exit 0
fi

run \$mode
EOF

chmod 755 bin/mpc_cleaner 
