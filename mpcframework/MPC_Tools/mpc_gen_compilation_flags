#!/bin/sh
############################# MPC License ############################## 
# Wed Nov 19 15:19:19 CET 2008                                         # 
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          # 
#                                                                      # 
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            # 
# This file is part of the MPC Runtime.                                # 
#                                                                      # 
# This software is governed by the CeCILL-C license under French law   # 
# and abiding by the rules of distribution of free software.  You can  # 
# use, modify and/ or redistribute the software under the terms of     # 
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     # 
# following URL http://www.cecill.info.                                # 
#                                                                      # 
# The fact that you are presently reading this means that you have     # 
# had knowledge of the CeCILL-C license and that you accept its        # 
# terms.                                                               # 
#                                                                      # 
# Authors:                                                             # 
#   - PERACHE Marc marc.perache@cea.fr                                 # 
#                                                                      # 
######################################################################## 

determine_compiler(){
cat << EOF > ${SCTK_CONF_C}
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <fcntl.h>
#include <stdio.h>
#include <assert.h>
#include <stdio.h>
#include <sys/types.h>
#include <signal.h>

#define SCTK_COMPILER "UNKNOWN_COMPILER"
#define SCTK_STRING __STRING
#define SCTK_STRING_VAL "__STRING(a)"

#if defined(AIX_SYS) && !defined(__GNUC__)
#define __IBM_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "IBM_COMPILER"
#endif

#if defined(SunOS_SYS) || defined(AIX_SYS) || defined(HP_UX_SYS) || !defined(Linux_SYS)
#undef SCTK_STRING
#undef SCTK_STRING_VAL
#define SCTK_STRING(EX) #EX
#define SCTK_STRING_VAL "#a"
#endif

#if (defined(SunOS_SYS) && !defined(__GNUC__)) || defined(__SUNPRO_C)
#define __SUN_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "SUN_COMPILER"
#endif

#if defined(OSF1_SYS) && (defined (__DECCXX) || defined (__DECC) || defined (__decc))
#define __DEC_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "DEC_COMPILER"
#endif

#if defined(IRIX64_SYS) && (defined(SGI_CC) || defined(_SGI_SOURCE))
#define __SGI_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "SGI_COMPILER"
#endif

#if !defined(__INTEL_COMPILER) && defined(__GNUC__)
#define __GNU_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "GNU_COMPILER"
#endif

#if defined(__INTEL_COMPILER)
#undef SCTK_COMPILER
#define SCTK_COMPILER "INTEL_COMPILER"
#endif

int main(){
    fprintf (stdout, "%s\n", SCTK_COMPILER);
    return 0;
}

EOF
sctk_printf "Compiler name: "
echo "$SCTK_CC -D${SCTK_OS}_SYS $SCTK_CFLAGS $SCTK_LDFLAGS ${SCTK_CONF_C} -o ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
eval "$SCTK_CC -D${SCTK_OS}_SYS $SCTK_CFLAGS $SCTK_LDFLAGS ${SCTK_CONF_C} -o ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
echo "${SCTK_CROSS_EXEC} ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
eval "${SCTK_CROSS_EXEC} ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
if test "$?" = "0" ; then 
	RES="`${SCTK_CROSS_EXEC} ${SCTK_CONF_BIN}`">> ${SCTK_CONF_LOG} 2>&1
	rm ${SCTK_CONF_C} ${SCTK_CONF_BIN} >> ${SCTK_CONF_LOG} 2>&1
	result $RES
else
	rm ${SCTK_CONF_C} ${SCTK_CONF_BIN} >> ${SCTK_CONF_LOG} 2>&1
	error  "detection fail"
fi
}
determine_fortran_compiler(){
cat << EOF > ${SCTK_CONF_F}
      program main
#define SCTK_COMPILER "__UNKNOWN_COMPILER"
#define SCTK_STRING __STRING
#define SCTK_STRING_VAL "__STRING(a)"

#if defined(AIX_SYS) && !defined(__GNUC__)
#define __IBM_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "IBM_COMPILER"
#endif

#if defined(SunOS_SYS) || defined(AIX_SYS) || defined(HP_UX_SYS)  || defined(WINDOWS_SYS)
#undef SCTK_STRING
#undef SCTK_STRING_VAL
#define SCTK_STRING(EX) #EX
#define SCTK_STRING_VAL "#a"
#endif

#if (defined(SunOS_SYS) && !defined(__GNUC__)) || defined(__SUNPRO_C)
#define __SUN_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "SUN_COMPILER"
#endif

#if defined(OSF1_SYS) && (defined (__DECCXX) || defined (__DECC) || defined (__decc))
#define __DEC_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "DEC_COMPILER"
#endif

#if defined(IRIX64_SYS) && (defined(SGI_CC) || defined(_SGI_SOURCE))
#define __SGI_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "SGI_COMPILER"
#endif

#if !defined(__INTEL_COMPILER) && defined(__GNUC__)
#define __GNU_COMPILER
#undef SCTK_COMPILER
#define SCTK_COMPILER "GNU_COMPILER"
#endif

#if defined(__INTEL_COMPILER)
#undef SCTK_COMPILER
#define SCTK_COMPILER "INTEL_COMPILER"
#endif
      print *,SCTK_COMPILER
      end
EOF

sctk_printf "Fortran Compiler name: "
echo "$SCTK_F77 -D${SCTK_OS}_SYS $SCTK_FFLAGS $SCTK_LDFLAGS ${SCTK_CONF_F} -o ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
eval "$SCTK_F77 -D${SCTK_OS}_SYS $SCTK_FFLAGS $SCTK_LDFLAGS ${SCTK_CONF_F} -o ${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
eval "${SCTK_CONF_BIN}">> ${SCTK_CONF_LOG} 2>&1
if test "$?" = "0" ; then 
	RES="`${SCTK_CONF_BIN}`">> ${SCTK_CONF_LOG} 2>&1
	rm ${SCTK_CONF_F} ${SCTK_CONF_BIN} >> ${SCTK_CONF_LOG} 2>&1
	result $RES
else
	rm ${SCTK_CONF_F} ${SCTK_CONF_BIN} >> ${SCTK_CONF_LOG} 2>&1
	result  "detection fail"
fi
}

check_cflags(){
    determine_compiler
    COMPILER_NAME="$RES"

COMPILER_SPECIFC_FLAGS=""
if test "$SCTK_DEBUG" = "0" ; then 
SCTK_CHECK_OPTION "-DNO_INTERNAL_ASSERT"
SCTK_CHECK_OPTION "-DNDEBUG"
case $COMPILER_NAME in
    GNU_COMPILER) 
    sctk_echo "Using $COMPILER_NAME options"
    SCTK_CHECK_OPTION "-O6 -finline-functions -fexpensive-optimizations -fPIC -fno-stack-protector"
    COMPILER_SPECIFC_FLAGS="-O6 -finline-functions -fexpensive-optimizations -fno-stack-protector"
    ;;
    INTEL_COMPILER)
    sctk_echo "Using $COMPILER_NAME options"
    SCTK_CHECK_OPTION "-O3 -ip -restrict -fPIC -nolib_inline "
    COMPILER_SPECIFC_FLAGS="-O3 -ip -restrict -nolib_inline "
    MPC_COMPILER_CFLAGS="-restrict"
    ;;
    SUN_COMPILER)
    sctk_echo "Using $COMPILER_NAME options"
    SCTK_CC_DEP="-xM"
    SCTK_CHECK_OPTION "-O -KPIC"
    COMPILER_SPECIFC_FLAGS="-O -KPIC"
    ;;
    *) 
    sctk_echo "Using standard C options"
    SCTK_CHECK_OPTION "-O3 -fPIC"
    COMPILER_SPECIFC_FLAGS="-O3"
esac
else
sctk_echo "Using debug options"
SCTK_CHECK_OPTION "-fPIC"
case $COMPILER_NAME in
    GNU_COMPILER) 
    sctk_echo "Using $COMPILER_NAME options"
    SCTK_CHECK_OPTION "-g -O0 -DSCTK_NO_INLINE -fno-stack-protector"
    ;;
    *) 
    sctk_echo "Using standard options"
    SCTK_CHECK_OPTION "-g -O0 -DSCTK_NO_INLINE"
esac

fi

if test "$SCTK_FORTRAN" = "1"; then 
    determine_fortran_compiler
    FORTRAN_COMPILER_NAME="$RES"
SCTK_CHECK_FOPTION "-fPIC"
case $FORTRAN_COMPILER_NAME in
    *INTEL_COMPILER*)
    #sctk_echo "Using $FORTRAN_COMPILER_NAME options"
    #SCTK_CHECK_FOPTION "$SCTK_FFLAGS -threads -recursive"
    ;;
esac
fi

}
