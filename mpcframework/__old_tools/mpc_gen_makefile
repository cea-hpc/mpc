#!/bin/sh
############################# MPC License ############################## 
# Wed Nov 19 15:19:19 CET 2008                                         # 
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          # 
#                                                                      # 
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            # 
# This file is part of the MPC Runtime.                                # 
#                                                                      # 
# This software is governed by the CeCILL-C license under French law   # 
# and abiding by the rules of distribution of free software.  You can  # 
# use, modify and/ or redistribute the software under the terms of     # 
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     # 
# following URL http://www.cecill.info.                                # 
#                                                                      # 
# The fact that you are presently reading this means that you have     # 
# had knowledge of the CeCILL-C license and that you accept its        # 
# terms.                                                               # 
#                                                                      # 
# Authors:                                                             # 
#   - PERACHE Marc marc.perache@cea.fr                                 # 
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     # 
#                                                                      # 
######################################################################## 

PWDS="`pwd`"
DIR="`basename $PWDS`"
SUBDIR=""

#
# Grab the list of sub directories
#
for i in * ; do
  if test -d $i -a ! -f ${i}/.nobuild; then 
    SUBDIR="$SUBDIR $i"
  fi
done

#
# Sort the sub directories into 2 categories
# -> LIB_SUBDIR
# -> EXE_SUBDIR
LIB_SUBDIR=""
EXE_SUBDIR=""
for i in $SUBDIR; do 
  if test -f $i/Makefile ; then
    EXE_SUBDIR="$EXE_SUBDIR $i"
  else
    LIB_SUBDIR="$LIB_SUBDIR $i"
  fi
done

echo "Process $DIR -> lib_subdirs $LIB_SUBDIR and exe_subdirs $EXE_SUBDIR"


#
# Output file
#
FILE=Makefile

#
# Header
#
echo "# Makefile generated with $0" > $FILE
CUR_DIR="`pwd`"
cd ..
chmod 755 $PWDS/../MPC_Tools/mpc_gen_license
eval "$PWDS/../MPC_Tools/mpc_gen_license Makefile">/tmp/mpc_lic
cd $CUR_DIR
cat /tmp/mpc_lic >> $FILE
rm /tmp/mpc_lic
echo "" >> $FILE

name(){
  NAME="`echo $1 | sed s,sctk_,,g`"
}

cat <<EOF >> $FILE

LOCAL_CFLAGS=\$(CFLAGS)

EOF
#
# Generate the set of objects for every LIB_SUBDIR
#
for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
cat <<EOF >> $FILE
FILES_${NAME}=\$(wildcard ${i}/*.c)
OBJ_${NAME}=\$(FILES_${NAME}:${i}/%.c=\$(M_PWD)/BUILD_${DIR}/lib/%.o)
DEP_${NAME}=\$(FILES_${NAME}:${i}/%.c=\$(M_PWD)/BUILD_${DIR}/lib/%.d)

SFILES_${NAME}=\$(wildcard ${i}/*.S)
SOBJ_${NAME}=\$(SFILES_${NAME}:${i}/%.S=\$(M_PWD)/BUILD_${DIR}/lib/%.o)
SDEP_${NAME}=\$(SFILES_${NAME}:${i}/%.S=\$(M_PWD)/BUILD_${DIR}/lib/%.d)


EOF
done

for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
cat <<EOF >> $FILE
FFILES_${NAME}=\$(wildcard ${i}/*.f)
FOBJ_${NAME}=\$(FFILES_${NAME}:${i}/%.f=\$(M_PWD)/BUILD_${DIR}/lib/%_f.o)

EOF
done


#
# Create the "all" rule
# -> every object file of LIB_SUBDIR and special rule for EXE_SUBDIR
#
ALL=""
for i in $LIB_SUBDIR; do 
  name $i
  if test "$i" = "sctk_optim"; then 
  i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
  fi
  ALL="$ALL \$(OBJ_$NAME) \$(FOBJ_$NAME) \$(SOBJ_$NAME)"
done

for i in $EXE_SUBDIR; do 
  ALL="$ALL build_$i"
done

echo "all:$ALL">> $FILE
echo "" >> $FILE


#
# Prepare includes
#
if test ! "$LIB_SUBDIR" = "" ; then
cat <<EOF >> $FILE
\$(M_PWD)/include_modules/$DIR:
EOF

for i in $LIB_SUBDIR; do 
  name $i
  if test "$i" = "sctk_optim"; then 
    i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
  fi
  printf "\t@../MPC_Tools/mpc_prepare_includes \$(MPC_SOURCE_DIR)$DIR/$i \$(M_PWD)/include_modules">> $FILE
  echo "">> $FILE
done

printf "\t@touch \$@">> $FILE
echo "" >> $FILE

echo "" >> $FILE
echo "prepare_includes:\$(M_PWD)/include_modules/$DIR">> $FILE
echo "" >> $FILE


#
# Dependences on DEP files
#
echo "" >> $FILE
echo "ifneq (\$(SCTK_MAKE_NO_DEP),yes)" >> $FILE
printf "DEPENDS=" >> $FILE
for i in $LIB_SUBDIR; do 
  name $i
  if test "$i" = "sctk_optim"; then 
    i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
  fi
  printf "\$(DEP_$NAME) ">> $FILE
done
echo "" >> $FILE

echo "" >> $FILE
echo "\$(DEPENDS):Makefile " >> $FILE
echo "endif" >> $FILE
echo "" >> $FILE

#
# Rules to build dependency file (%.d)
#
echo "ifneq (\$(SCTK_MAKE_NO_DEP),yes)" >> $FILE
for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(DEP_$NAME):\$(M_PWD)/BUILD_$DIR/lib/%%.d:${i}/%%.c">> $FILE;
echo "">> $FILE
printf "\t@echo \"DEP \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,%%.c,\$@)\"">> $FILE;
echo "">> $FILE
if test "$i" != "sctk_asm" && test "$i" != "sctk_spinlock"; then 
printf "\t@\$(CC) \$(SCTK_CC_DEP) \$(LOCAL_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,$i/%%.c,\$@) | \\">> $FILE;
echo "">> $FILE
else
printf "\t@\$(GCC) -M \$(GNU_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,$i/%%.c,\$@) | \\">> $FILE;
echo "">> $FILE
fi
printf "\t\tsed 's,\$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,%%.o,\$@):,\$(patsubst %%.d,%%.o,\$@) \$@:,g'> \$@ 2> /dev/null">> $FILE;echo "">> $FILE
echo "" >> $FILE
done
echo "else" >> $FILE
for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(DEP_$NAME):\$(M_PWD)/BUILD_$DIR/lib/%%.d:${i}/%%.c">> $FILE;echo "">> $FILE
printf "\t@echo \"DEP \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,%%.c,\$@)\"">> $FILE;echo "">> $FILE
printf "\t@echo \"\$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,$i/%%.c,\$@)\" > \$@">> $FILE;echo "">> $FILE
echo "" >> $FILE
done
echo "endif" >> $FILE
echo "" >> $FILE

for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(OBJ_$NAME):%%.o:%%.d">> $FILE;echo "">> $FILE
printf "\t@echo \"CC  \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.o,%%.c,\$@)\"">> $FILE;echo "">> $FILE
if test "$i" != "sctk_asm" && test "$i" != "sctk_spinlock"; then 
printf "\t@\$(CC) -c \$(LOCAL_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.o,\$(shell pwd)/$i/%%.c,\$@) -o \$@">> $FILE;echo "">> $FILE
else
printf "\t@\$(GCC) -c \$(GNU_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.o,\$(shell pwd)/$i/%%.c,\$@) -o \$@">> $FILE;echo "">> $FILE
fi
echo "" >> $FILE
done

for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(SDEP_$NAME):\$(M_PWD)/BUILD_$DIR/lib/%%.d:${i}/%%.S">> $FILE;echo "">> $FILE
printf "\t@echo \"DEP \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,%%.S,\$@)\"">> $FILE;echo "">> $FILE
printf "\t@\$(GCC) -M \$(GNU_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,$i/%%.S,\$@) | \\">> $FILE;echo "">> $FILE
printf "\t\tsed 's,\$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.d,%%.o,\$@):,\$(patsubst %%.d,%%.o,\$@) \$@:,g'> \$@ 2> /dev/null">> $FILE;echo "">> $FILE
echo "" >> $FILE
done

for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(SOBJ_$NAME):%%.o:%%.d">> $FILE;echo "">> $FILE
printf "\t@echo \"CC  \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.o,%%.S,\$@)\"">> $FILE;echo "">> $FILE
printf "\t@\$(GCC) -c \$(GNU_CFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%.o,\$(shell pwd)/$i/%%.S,\$@) -o \$@">> $FILE;echo "">> $FILE
echo "" >> $FILE
done

for i in $LIB_SUBDIR; do 
name $i
if test "$i" = "sctk_optim"; then 
i="sctk_optim/\$(SCTK_ARCH_OPTIM)"
fi
printf "\$(FOBJ_$NAME):\$(M_PWD)/BUILD_$DIR/lib/%%_f.o:${i}/%%.f">> $FILE;echo "">> $FILE
printf "\t@echo \"F77 \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%_f.o,%%.f,\$@)\"">> $FILE;echo "">> $FILE
printf "\t@\$(F77) -c \$(FFLAGS) \$(patsubst \$(M_PWD)/BUILD_$DIR/lib/%%_f.o,$i/%%.f,\$@) -o \$@">> $FILE;echo "">> $FILE
echo "" >> $FILE
done



echo "" >> $FILE
cat <<EOF >> $FILE
ifneq (\$(SCTK_MAKE_NO_DEP),yes)
ifeq (\$(MAKECMDGOALS),all)
-include \$(DEPENDS)
endif
endif
EOF

else

echo "" >> $FILE
echo "prepare_includes:">> $FILE
echo "" >> $FILE


fi # End of (if test ! "$LIB_SUBDIR" = "")

#
# Generate rules for EXE_SUBDIR
#
for i in $EXE_SUBDIR; do
echo "build_$i:" >> $FILE
printf "\t@mkdir -p \$(M_PWD)/BUILD_${DIR}/$i" >> $FILE
echo "" >> $FILE
printf "\t@echo \"MAK $i\"">> $FILE;echo "">> $FILE
printf "\t@\$(MAKE) BUILD_DIR=\$(M_PWD)/BUILD_${DIR}/$i -C $i all" >> $FILE
echo "" >> $FILE
done
