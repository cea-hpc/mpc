/* ############################# MPC License ############################## */
/* # Wed Nov 19 15:19:19 CET 2008                                         # */
/* # Copyright or (C) or Copr. Commissariat a l'Energie Atomique          # */
/* #                                                                      # */
/* # IDDN.FR.001.230040.000.S.P.2007.000.10000                            # */
/* # This file is part of the MPC Runtime.                                # */
/* #                                                                      # */
/* # This software is governed by the CeCILL-C license under French law   # */
/* # and abiding by the rules of distribution of free software.  You can  # */
/* # use, modify and/ or redistribute the software under the terms of     # */
/* # the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     # */
/* # following URL http://www.cecill.info.                                # */
/* #                                                                      # */
/* # The fact that you are presently reading this means that you have     # */
/* # had knowledge of the CeCILL-C license and that you accept its        # */
/* # terms.                                                               # */
/* #                                                                      # */
/* # Authors:                                                             # */
/* #   - PERACHE Marc marc.perache@cea.fr                                 # */
/* #   - BESNARD Jean-Baptiste jbbesnard@paratools.fr                     # */
/* #                                                                      # */
/* ######################################################################## */

#ifndef MPC_COMMON_INCLUDE_MPC_COMMON_TYPES_H_
#define MPC_COMMON_INCLUDE_MPC_COMMON_TYPES_H_

#ifdef __cplusplus
extern "C" {
#endif


/********
 * BOOL *
 ********/
//#ifndef __cplusplus

/* HAVE_STDBOOL_H */
//#if @HAVE_STDBOOL_H@ == 1
	//#include <stdbool.h>
//#else /* HAVE_STDBOOL_H */
	#define bool unsigned char
	#define true 1
	#define false 0
//#endif /* HAVE_STDBOOL_H */

//#endif

/**********
 * STDINT *
 **********/

//stdint.h is C99, if we didn't get support of it, fall-back on manual
//definitions of uint64_t... For compatibility, please use sctk_stdin.h in MPC
//in place of stdint.h
/* HAVE_STDINT_H */
#if (@HAVE_STDINT_H@ == 1) || defined(__cplusplus)
	//use standard defs
	#include <stdint.h>
#else /* HAVE_STDINT_H */
	//select arch specific mode
	#if defined(SCTK_x86_64_ARCH_SCTK) || defined(SCTK_i686_ARCH_SCTK)
		//for x86 64bit
		typedef signed char             int8_t;
		typedef short int               int16_t;
		typedef int                     int32_t;
		typedef long int                int64_t;
                typedef unsigned long int       uintptr_t
		typedef unsigned char           uint8_t;
		typedef unsigned short int      uint16_t;
		typedef unsigned int            uint32_t;
		//"long long int" is 64bit for 32bit and 64bit arch
		//not as "long int" which change.
		//Also OK for windows which use 32bit long int and
		//64bit long long on x86_64
		typedef unsigned long long int  uint64_t;
	#else //arch
		#error "Unsupported architecture without stdint.h"
	#endif //arch
#endif /* HAVE_STDINT_H */

/**************
 * WIDE CHARS *
 **************/

/* HAVE_WCHAR_H */
#if (@HAVE_WCHAR_H@ == 1) || defined(__cplusplus)
	#include <wchar.h>
	#define sctk_wchar_t wchar_t
#else /* HAVE_WCHAR_H */
	#define sctk_wchar_t uint16_t
#endif /* HAVE_WCHAR_H */

#ifdef __cplusplus
}
#endif

#endif /* MPC_COMMON_INCLUDE_MPC_COMMON_TYPES_H_ */
