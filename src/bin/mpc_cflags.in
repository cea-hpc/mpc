#!/bin/sh
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - PERACHE Marc marc.perache@cea.fr                                 #
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     #
#                                                                      #
########################################################################

#
# Installation environment
#

MPC_INSTALL_PREFIX="@prefix@"
MPC_SHARE_DIR="@PKG_DATADIR@"
MPC_INCLUDEDIR="@PKG_INCDIR@"
MPC_GENERATION_DATE="@MPC_GENERATION_DATE@"

#
# Default compiler environmnent
#

MPC_DEFAULT_C_COMPILER="@MPC_DEFAULT_C_COMPILER@"
MPC_DEFAULT_CXX_COMPILER="@MPC_DEFAULT_CXX_COMPILER@"
MPC_DEFAULT_FC_COMPILER="@MPC_DEFAULT_FC_COMPILER@"

#
# General Argument Parsing
#

#if the SH flag is present or FORTRAN

HAS_SH_FLAG="no"

for arg in "$@" ; do
	case $arg in
		-sh)
			HAS_SH_FLAG="yes"
		;;
	esac
done

#
# Print Module list
#

# Module FLAGS
MPC_MODULE_LIST="@MPC_MODULE_LIST@"

gen_module_defines()
{
	RET=""

	for m in ${MPC_MODULE_LIST}
	do
		RET="$RET -D${m}"
	done

	echo $RET
}

#
# Generate Flags
#

OPA_CFLAGS="@OPA_CFLAGS@"
HWLOC_CFLAGS="@HWLOC_CFLAGS@"
EXTLS_CFLAGS="@EXTLS_CFLAGS@"
MPCALLOC_CFLAGS="@ALLOC_CFLAGS@"

FLAGS="-I${MPC_INCLUDEDIR}"
FLAGS="$FLAGS ${OPA_CFLAGS}"
FLAGS="$FLAGS ${HWLOC_CFLAGS}"
FLAGS="$FLAGS ${EXTLS_CFLAGS}"
FLAGS="$FLAGS ${MPCALLOC_CFLAGS}"

FLAGS="$FLAGS $(gen_module_defines)"

#
# Help
#

show_help()
{
	echo "mpc_cflags can be used to retrieve information on MPC's compilation flags"
	echo ""
	echo "mpc_cflags [-sh] [-p] [-m] [-s] [-cc] [-fc] [-cpp] [-f] [-h]"
	echo ""
	echo "If not argument is provided CFLAGS are printed out"
	echo ""
	echo " -h|--help    Print this help"
	echo " -f|--cflags  Print cflags"
	echo " --sh         Output in shell format"
	echo ""
	echo "Install env:"
	echo " -p           Display mpc install prefix"
	echo " -s           Display mpc share directory"
	echo " -t           MPC configuration timestamp"
	echo ""
	echo "Modules:"
	echo " -m           List compiled Modules"
	echo ""
	echo "Compilers:"
	echo " -cc          Print default C compiler"
	echo " -fc          Print default Fortran compiler"
	echo " -cxx|-cpp    Print default C++ compiler"
}

#
# Argument Parsing
#

print_var()
{
	if test "x${HAS_SH_FLAG}" = "xyes"; then
		echo "$1=\"$2\""
	else
		echo "$2"
	fi
}


for arg in "$@" ; do
	case $arg in
		# ----------------------------------------------------------------
		# Compiler options that affect whether we are linking or not
	-p)
		print_var "MPC_INSTALL_PREFIX" "$MPC_INSTALL_PREFIX"
		;;
	-s)
		print_var "MPC_SHARE_DIR" "$MPC_SHARE_DIR"
		;;
	-m)
		print_var "MPC_MODULE_LIST" "$MPC_MODULE_LIST"
		;;
	-cc)
		print_var "MPC_DEFAULT_C_COMPILER" "$MPC_DEFAULT_C_COMPILER"
		;;
	-fc)
		print_var "MPC_DEFAULT_FC_COMPILER" "$MPC_DEFAULT_FC_COMPILER"
		;;
	-cxx|-cpp)
		print_var "MPC_DEFAULT_CXX_COMPILER" "$MPC_DEFAULT_CXX_COMPILER"
		;;
	-t)
		print_var "MPC_GENERATION_DATE" "$MPC_GENERATION_DATE"
		;;
	-f|--cflags)
		print_var "CFLAGS" "$FLAGS"
		;;
	-sh)
	# Handled in the first pass
	;;
	*)
		show_help
		exit 0
		;;
	esac
done

# No param just print cflags

if test "x$#" = "x0"; then
	echo "${FLAGS}"
fi