#!/bin/sh
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - PERACHE Marc marc.perache@cea.fr                                 #
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     #
#                                                                      #
########################################################################
MPC_INSTALL_PREFIX="@prefix@"

OPA_LDFLAGS="@OPA_LIBS@"
HWLOC_LDFLAGS="@HWLOC_LIBS@"
EXTLS_LDFLAGS="@EXTLS_LIBS@"
MPCALLOC_LDFLAGS="@ALLOC_LIBS@"

#
# Usage and general argument parsing
#

show_help()
{
	echo "mpc_ldflags can be used to retrieve information on MPC's link flags"
	echo ""
	echo "mpc_ldflags [-sh] [-p] [-l] [-h]"
	echo ""
	echo "If not argument is provided LDFLAGS are printed out"
	echo ""
	echo " -h|--help    Print this help"
	echo " -l|--ldflags Print ldflags"
	echo " --fortran    Generate flags for Fortran"
	echo " --priv       Flags for privatized binary (only for Fortran)"
	echo " --sh         Output in shell format"
	echo ""
	echo "Install env:"
	echo " -p           Display mpc install prefix"
}

#if the SH flag is present or FORTRAN

HAS_SH_FLAG="no"
IS_FORTRAN="no"
IS_PRIV="no"

for arg in "$@" ; do
	case $arg in
		--sh)
			HAS_SH_FLAG="yes"
		;;
		--fortran)
			IS_FORTRAN="yes"
		;;
		--priv)
			IS_PRIV="yes"
		;;
	esac
done

#
# Generate LDFLAGS
#

# Module FLAGS
MPC_THREAD_ENABLED="@MPC_THREAD_ENABLED@"
MPC_LOWCOMM_ENABLED="@MPC_LOWCOMM_ENABLED@"
MPC_MPI_ENABLED="@MPC_MPI_ENABLED@"
MPC_OPENMP_ENABLED="@MPC_OPENMP_ENABLED@"
MPC_MPIIO_ENABLED="@MPC_MPIIO_ENABLED@"

FLAGS=""

if test -d ${MPC_INSTALL_PREFIX}/lib/; then
	FLAGS="$FLAGS -Wl,-rpath,${MPC_INSTALL_PREFIX}/lib"
fi

if test -d ${MPC_INSTALL_PREFIX}/lib64/; then
	FLAGS="$FLAGS -Wl,-rpath,${MPC_INSTALL_PREFIX}/lib64/"
fi

FLAGS="$FLAGS  -L${MPC_INSTALL_PREFIX}/lib"

# MPC_Arch // MPC_Common // MPC_COnfig
FLAGS="$FLAGS ${OPA_LDFLAGS} ${MPCALLOC_LDFLAGS}"

# MPC_Topology
FLAGS="$FLAGS ${HWLOC_LDFLAGS}"

# MPC_Launch
FLAGS="$FLAGS -ldl"

if test "x${MPC_THREAD_ENABLED}" = "xyes"; then
	# MPC_Thread
	FLAGS="$FLAGS  -lmpcthread -lpthread ${EXTLS_LDFLAGS}"
fi

if test "x${MPC_OPENMP_ENABLED}" = "xyes"; then
	# MPC_OpenMP
	FLAGS="$FLAGS  -lmpcomp"
fi

if test "x${MPC_LOWCOMM_ENABLED}" = "xyes"; then
	# MPC_Lowcomm
	FLAGS="$FLAGS  -lmpclowcomm -lm"
fi

if test "x${MPC_MPI_ENABLED}" = "xyes"; then
	# MPC_MPI
	FLAGS="$FLAGS -lmpcmpi"

	if test "x${MPC_MPIIO_ENABLED}" = "xyes"; then
		# MPC_IO
		FLAGS="$FLAGS -lmpcio"
	fi

	if test "x${IS_FORTRAN}" = "xyes"; then
		if test "x${IS_PRIV}" = "xno"; then
			FLAGS="$FLAGS -lmpcfortran"
		else
			FLAGS="$FLAGS -lmpcfortran_priv"
		fi
	fi
fi

# CONFIG
FLAGS="$FLAGS -lmpcconfig"


#
# Helper to print a var
#

print_var()
{
	if test "x${HAS_SH_FLAG}" = "xyes"; then
		echo "$1=\"$2\""
	else
		echo "$2"
	fi
}


for arg in "$@" ; do
	case $arg in
		# ----------------------------------------------------------------
		# Compiler options that affect whether we are linking or not
	-p)
		print_var "MPC_INSTALL_PREFIX" "$MPC_INSTALL_PREFIX"
		;;
	-l|--ldflags)
		print_var "CFLAGS" "$FLAGS"
		;;
	--sh|--fortran|--priv)
	# Handled in the first pass
	;;
	*)
		show_help
		exit 0
		;;
	esac
done

# No param just print cflags

if test "x$#" = "x0"; then
	echo "${FLAGS}"
fi
