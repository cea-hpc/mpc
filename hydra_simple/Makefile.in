# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = ar
AR_FLAGS        = rcu
RANLIB          = ranlib
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
master_top_srcdir  = @master_top_srcdir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS) -g -ggdb
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
HEADERS = simple_pmiutil.h
INCLUDES = -I../hydra-1.4/mpl/include
LDFLAGS = -L../hydra-1.4/mpl/
LIBS = -lmpl

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile localdefs config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f pmiconf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile

all-redirect: libsimple.a

libsimple.a: safestr2.o simple_pmiutil.o simple_pmi.o
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR ${AR_FLAGS} $@ $?" ; \
	else \
	  echo ${AR} ${AR_FLAGS} $@ $? ; \
	fi
	@${AR} ${AR_FLAGS} $@ $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          $@" ; \
	else \
	  echo ${RANLIB} $@ ; \
	fi
	@${RANLIB} $@
	
#all-redirect: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
#	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
#	    ${MAKE} .libstamp1 || exit 1; \
#	fi
#
#.libstamp0 ../../../lib/lib${MPILIBNAME}.a: simple_pmiutil.o simple_pmi.o 
#	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
#	  echo "  AR ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.a $?" ; \
#	else \
#	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.a $? ; \
#	fi
#	@${AR} ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.a $?
#	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
#	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
#	else \
#	  echo ${RANLIB} ../../../lib/lib${MPILIBNAME}.a ; \
#	fi
#	@${RANLIB} ../../../lib/lib${MPILIBNAME}.a
#	date > .libstamp0
#.libstamp1 ../../../lib/lib${MPILIBNAME}.la: simple_pmiutil.lo simple_pmi.lo 
#	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
#	  echo "  AR ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.la $?" ; \
#	else \
#	  echo ${AR} ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.la $? ; \
#	fi
#	@${AR} ${AR_FLAGS} ../../../lib/lib${MPILIBNAME}.la $?
#	date > .libstamp1
	
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  safestr2.c simple_pmiutil.c simple_pmi.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------

distclean-local:
	@-rm -f pmiconf.h

.POSIX:

FORCE_TARGET:

