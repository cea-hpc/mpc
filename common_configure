#!/bin/sh
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     #
#   - PERACHE Marc marc.perache@cea.fr                                 #
#                                                                      #
########################################################################

# Env variables which can be set
CC=""
CFLAGS=""
CPPFLAGS=""
LDFLAGS=""
F77=""
AR=""

######################################################
#             CROSS-COMPILATION MIC
######################################################
mic_configure_hwloc() {
  HWLOC_ARGUMENTS="${HWLOC_ARGUMENTS} --host=i686-pc-linux-gnu --target=i686-pc-linux-gnu"
  F77=ifort
  CC=icc
  AR=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ar
  LD=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ld
  CFLAGS="${CFLAGS} -mmic"
  LDFLAGS="${LDFLAGS} -mmic"
  CPPFLAGS="${CFLAGS}"
}

mic_configure_hydra() {
  ARGUMENTS_HYDRA="${ARGUMENTS_HYDRA} --host=i686-pc-linux-gnu --target=i686-pc-linux-gnu"
  ARGUMENTS_SIMPLE="${ARGUMENTS_SIMPLE} --host=i686-pc-linux-gnu --target=i686-pc-linux-gnu"
  F77=ifort
  CC=icc
  AR=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ar
  LD=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ld
  CFLAGS="-mmic ${CFLAGS}"
  LDFLAGS="-mmic ${LDFLAGS}"
}

mic_configure_openpa() {
  ARGUMENTS_OPENPA="${ARGUMENTS_OPENPA} --host=i686-pc-linux --target=i686-pc-linux-gnu"
  F77=ifort
  CC=icc
  AR=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ar
  LD=/usr/linux-l1om-4.7/bin/x86_64-l1om-linux-ld
  CFLAGS="-mmic ${CFLAGS}"
  LDFLAGS="-mmic ${LDFLAGS}"
}

prepare_arguments() {
  OUTPUT=""

  if [ ! -z "${CC}" ]; then
    OUTPUT="${OUTPUT} CC=${CC}"
  fi

  if [ ! -z "${F77}" ]; then
    OUTPUT="${OUTPUT} F77=${F77}"
  fi

  if [ ! -z "${AR}" ]; then
    OUTPUT="${OUTPUT} AR=${AR}"
  fi

  if [ ! -z "${LD}" ]; then
    OUTPUT="${OUTPUT} LD=${LD}"
  fi

  echo $OUTPUT
}

######################################################
#             ARCHIVES PREPARATION
######################################################

prepare_archive_directory() {

# shift 1

echo "Entering prepare_archive_directory: Use $VERSION in  $MPC_SOURCE_DIR"

# Check if we should use specified configuration or a default one
if test "$ARCHIVE_TYPE" = "" ; then
  echo "Using default configuration..."
  # Look for the right configuration of this version in 'VERSIONS' file
  while read ver atype aname adir pneeded pname args ; do
  if test "$ver" = "#" ; then
    echo "Comment"
  else
    if test "$ver" = "$VERSION" ; then
      echo "Found version $ver..."
      ARCHIVE_TYPE=$atype
      ARCHIVE_NAME=$aname
      ARCHIVE_DIR=$adir
      PATCH_NEEDED=$pneeded
      PATCH_NAME=$pname
      ARGUMENTS="$args $ARGUMENTS"
      break
    else
      echo "Skipping version $ver..."
    fi
  fi
  done < $MPC_SOURCE_DIR/VERSIONS
else
  echo "Using specified configuration..."
fi

# Print final config
echo "Configuring version $1 with"
echo " - Prefix = $PREFIX"
echo " - Archive Type = $ARCHIVE_TYPE"
echo " - Archive Name = $ARCHIVE_NAME"
echo " - Archive Directory = $ARCHIVE_DIR"
echo " - Patch Needed = $PATCH_NEEDED"
echo " - Patch Name = $PATCH_NAME"
echo " - Arguments = $ARGUMENTS"

# Converting Archive Name and Directory to prefix with mpc source dir
echo ${ARCHIVE_NAME} | grep -qE "^/"
ABSOLUTE=$?
if test "${ABSOLUTE}" = "0" ; then
  FINAL_ARCHIVE_NAME=${ARCHIVE_NAME}
else
  FINAL_ARCHIVE_NAME=${MPC_SOURCE_DIR}/${ARCHIVE_NAME}
fi

echo "Conversion: ${ARCHIVE_NAME} -> ${FINAL_ARCHIVE_NAME}"

echo ${ARCHIVE_DIR} | grep -qE "^/"
ABSOLUTE=$?
if test "${ABSOLUTE}" = "0" ; then
  FINAL_ARCHIVE_DIR=${ARCHIVE_DIR}
else
    FINAL_ARCHIVE_DIR=${MPC_SOURCE_DIR}/${ARCHIVE_DIR}
fi

echo "Conversion: ${ARCHIVE_DIR} -> ${FINAL_ARCHIVE_DIR}"

echo ${PATCH_NAME} | grep -qE "^/"
ABSOLUTE=$?
if test "${ABSOLUTE}" = "0" ; then
  FINAL_PATCH_NAME=${PATCH_NAME}
else
  FINAL_PATCH_NAME=${MPC_SOURCE_DIR}/${PATCH_NAME}
fi

echo "Conversion: ${PATCH_NAME} -> ${FINAL_PATCH_NAME}"

#
# Build the source directory
# -> If archive_type = 1 or 2, first uncompress it
# -> If archive_type = 4, then 'wget' it and uncompress it
# Then apply the patch if PATCH_NEEDED is equal to 1 (-> PATCH_NAME)
#
case ${ARCHIVE_TYPE} in
1)
  if test ! -d ${ARCHIVE_DIR} ; then
    echo "Inflating TAR/GZ archive named ${FINAL_ARCHIVE_NAME}"
    tar zxf ${FINAL_ARCHIVE_NAME}
  else
    PATCH_NEEDED=0
  fi
  FINAL_ARCHIVE_DIR=${ARCHIVE_DIR}
;;
2)
  if test ! -d ${ARCHIVE_DIR} ; then
    echo "Inflating TAR/BZ2 archive named ${FINAL_ARCHIVE_NAME}"
    tar jxf ${FINAL_ARCHIVE_NAME}
  else
    PATCH_NEEDED=0
  fi
  FINAL_ARCHIVE_DIR=${ARCHIVE_DIR}
;;
3)
  echo "Source located in directory ${FINAL_ARCHIVE_DIR}"
;;
4)
echo "Archive of type TAR/GZ to get from address ${ARCHIVE_NAME}"
echo "Error: unimplemented yet..."
exit 1
;;
5)
echo "Archive of type TAR/BZ2 to get from address ${ARCHIVE_NAME}"
echo "Error: unimplemented yet..."
exit 1
;;
*)
echo "Error: Unknown archive type ${ARCHIVE_TYPE}..."
exit 1
;;
esac
}
