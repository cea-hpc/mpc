stages:
- build
- cleanup_build
- test_simple
- test
- cleanup

build_job:
  stage: build
  script:
  - mkdir -p $HOME/mpc_tmp_builds/$CI_PIPELINE_ID
  - echo "#!/bin/sh" > ./build.sh
  - echo "set -e" >> ./build.sh
  - echo "rm -fr /dev/shm/${CI_PIPELINE_ID}_BUILD" >> ./build.sh
  - echo "mkdir /dev/shm/${CI_PIPELINE_ID}_BUILD" >> ./build.sh
  - echo "ln -s /dev/shm/${CI_PIPELINE_ID}_BUILD BUILD" >> ./build.sh
  - echo "cd ./BUILD/" >> ./build.sh
  - echo "${CI_PROJECT_DIR}/installmpc --prefix=$HOME/mpc_tmp_builds/$CI_PIPELINE_ID -j4 --mpc-option='--with-slurm --enable-debug'; rm -fr /dev/shm/${CI_PIPELINE_ID}_BUILD/" >> ./build.sh
  - chmod +x ./build.sh
  - srun -N 1 -c 8 ./build.sh

simple:
  stage: test_simple
  script:
  - $HOME/run_valid.sh ${CI_PROJECT_DIR}/MPC_Test_Suite/ $HOME/mpc_tmp_builds/$CI_PIPELINE_ID/ ./simple

privatization:
  stage: test
  script:
  - $HOME/run_valid.sh ${CI_PROJECT_DIR}/MPC_Test_Suite/ $HOME/mpc_tmp_builds/$CI_PIPELINE_ID/ ./gcc

messagepassing:
  stage: test
  script:
  - $HOME/run_valid.sh ${CI_PROJECT_DIR}/MPC_Test_Suite/ $HOME/mpc_tmp_builds/$CI_PIPELINE_ID/ ./MPI/MessagePassing/

imb:
  stage: test
  script:
  - $HOME/run_valid.sh ${CI_PROJECT_DIR}/MPC_Test_Suite/ $HOME/mpc_tmp_builds/$CI_PIPELINE_ID/ ./MPI/IMB/check/

mpi:
  stage: test
  script:
  - $HOME/run_valid.sh ${CI_PROJECT_DIR}/MPC_Test_Suite/ $HOME/mpc_tmp_builds/$CI_PIPELINE_ID/ ./MPI/Intel_ANL/communicators

cleanup_job:
  stage: cleanup
  script:
  - rm -fr $HOME/mpc_tmp_builds/$CI_PIPELINE_ID
  - rm -fr /dev/shm/${CI_PIPELINE_ID}_BUILD
