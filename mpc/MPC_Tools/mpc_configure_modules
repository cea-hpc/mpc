############################# MPC License ##############################
# Mon Jan 31 21:32:08 CET 2011                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - VALAT Sebastien sebastien.valat@cea.fr                           #
#                                                                      #
########################################################################

# Global var assumption :
# - MPC_SOURCE_DIR : Point mpc source directory

#check config file
if test ! -f "${MPC_SOURCE_DIR}/modules.def" ; then
	echo "Error : can't find ${MPC_SOURCE_DIR}/modules.def"
	exit 1
fi 

# Return the list of available modules
#   - filter : Define the list of status to accept (Default : enabled,disabled,forced)
mpc_modules_get_list()
{
	#setup default filter
	if test -z "$1"; then
		filter=",enabled,disabled,force,"
	else
		filter=",$1,"
	fi

	#search modules
	while read name sep status sep descr
	do
		if test "`echo \"$filter\" | grep \"$status\"`" != ""; then
				echo "$name"
		fi
	done < ${MPC_SOURCE_DIR}/modules.def
}

# Display modules help
# params :
#  - selected status (enabled | disabled)
mpc_modules_print_help()
{
	while read name sep status sep descr
	do
		if test "$status" = "$1" ; then
			case "${status}" in
				enabled)
					printf "  --disable-%-20s   %s\n" "${name}" "${descr}"
					;;
				disabled)
					printf "  --enable-%-20s    %s\n" "${name}" "${descr}"
					;;
			esac
		fi
	done < ${MPC_SOURCE_DIR}/modules.def
}

# Clear modules build dir (BUILD_*)
mpc_modules_clean_build_dirs()
{
	for i in `mpc_modules_get_list`
	do
		rm -rf BUILD_$i > /dev/null 2>&1
	done
}

# Apply default activation of modules
mpc_modules_activate_modules()
{
	for name in `mpc_modules_get_list enabled,forced`
	do
		if ! test -d "${MPC_SOURCE_DIR}/${name}"; then
			echo "Error: can't find directory of module ${name}"
			exit 1
		fi
		activate_module "${name}"
	done
}

# Disable module
# Params:
#   - module name
mpc_modules_disable_module()
{
	debug  "${name}=''"
	eval "${name}=''"
}

# Disable all modules except forced modules
mpc_modules_disable_all()
{
	for name in `mpc_modules_get_list enabled,disabled`
	do
		mpc_modules_disable_module "${name}"
	done
}

