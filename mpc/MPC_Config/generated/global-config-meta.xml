<?xml version="1.0"?>
<all>
<!--
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - VALAT Sebastien sebastien.valat@cea.fr                           #
#                                                                      #
########################################################################
-->
<config name="MPC_Allocator">
	<usertypes>
		<struct name="allocator"             doc="Options for MPC memory allocator.">
			<!--
			                   !!!!!!  READ THIS BEFORE MODIFY !!!!!!!!!!

			!!!! CAUTION !!!!! Due to initialization steps, we must boostrap egg_allocator with default
			values, so allocator can only use options which can be override on-fly (during the run)
			and must not define fixed parameters.
			There is an exception for all steps which are done after egg_allocator init steps :
			    - NUMA setup and usage
				- Setup allocator of threads (memory source mapping, scope selection....)
			!!!! CAUTION !!!!! If you want to add an array here, you must fix function
			sctk_alloc_config_egg_init().
			!!!! CAUTION !!!!! Up to now default values are replicated into sctk_alloc_config_egg_init()
			don't forget to update it in case of change.
			-->
			<param name="numa_migration"     type="bool"    default="false"    doc="Enable or disable NUMA migration of allocator pages on thread migration."/>
			<param name="realloc_factor"     type="int"     default="2"        doc="If the new segment is less than N time smaller than factor, realloc will allocate a new segment, otherwise it will keep the same one. Use 1 to force realloc every time (may be slower but consume less memory)."/>
			<param name="realloc_threashold" type="size"    default="50MB"     doc="If the new segment is smaller of N bytes than threashold, realloc will allocate a new segment, otherwise it will keep the same one. Use 0 to force realloc every time (may be slower but consume less memory)."/>
			<param name="numa"               type="bool"    default="true"     doc="Permit to enable of disable NUMA support in MPC Allocator."/>
			<param name="scope"              type="string"  default="thread"   doc="Define the scope the posix allocator, can be : process | vp | thread."/>
			<param name="strict"             type="bool"    default="false"    doc="If true, enable usage of abort() on free error, otherwise try to continue by skipping."/>
			<param name="keep_mem"           type="size"    default="500MB"     doc="Maximum amount of memory to keep in memory sources (one per NUMA node). Use 0 to disable cache, huge value to keep all."/>
			<param name="keep_max"           type="size"    default="40MB"      doc="Maximum size of macro blocs to keep in memory source for reuse. Use 0 to disable cache, huge value to keep all."/>
		</struct>
	</usertypes>
	<modules>
		<module name="allocator" type="allocator"/>
	</modules>
</config>
<config name="MPC_Common">
	<usertypes>
		<struct name="launcher" doc="Options for MPC launcher.">
			<param name="smt" type="bool" default="false" doc="Enable usage of hyperthreaded cores if available on current architecture."/>
			<param name="cores" type="int" default="1" doc="Default number of cores if -c=X is not given to mpcrun."/>
			<param name="verbosity" type="int" default="0" doc="Default verbosity level from 0 to 3. Can be override by -vv on mpcrun."/>
			<param name="banner" type="bool" default="true" doc="Display the MPC banner at launch time to print some informations about the topology. Can be override by MPC_DISABLE_BANNER."/>
			<param name="autokill" type="int" default="0" doc="Automatically kill the MPC processes after a given timeout. Use 0 to disable. Can be override by MPC_AUTO_KILL_TIMEOUT."/>
			<param name="user_launchers" type="string" default="" doc="Permit to extend the launchers available via 'mpcrun -l=...' by providing scripts (named mpcrun_XXXX) in a user directory. Can be override by MPC_USER_LAUNCHERS."/>
		</struct>
	</usertypes>
	<modules>
		<module name="launcher" type="launcher"/>
	</modules>
</config>
<config name="MPC_Message_Passing">
	<usertypes>

		<!-- Structure for infiniband driver -->
		<struct name="net_driver_fake" doc="Declare a fake driver to test the configuration system.">
			<param name="buffer" type="int" doc="Size of the buffer used for internal copies." default ="1024"/>
			<param name="stealing" type="bool" doc="Enable stealing between threads." default="true"/>
		</struct>

		<!-- Union to merge drivers -->
		<union name="net_driver" doc="Define a specific configuration for a network driver to apply in rails.">
			<choice name="infiniband" type="net_driver_fake"/>
			<choice name="tcp" type="net_driver_fake"/>
		</union>

		<!-- define a network driver config -->
		<struct name="net_driver_config" doc="Contain a list of driver configuration reused by rail definitions.">
			<param name="name" type="string" doc="Name of the driver configuration to be referenced in rail definitions."/>
			<param name="driver" type="net_driver" doc="Define the related driver to use and its configuration."/>
		</struct>

		<!-- Structure for rail definition -->
		<struct name="net_rail" doc="Define a rail which is a name, a device associate to a driver and a routing topology.">
			<param name="name" type="string" doc="Define the name of current rail."/>
			<param name="device" type="string" doc="Define the name of the device to use in this rail."/>
			<param name="topology" type="string" doc="Define the network topology to apply on this rail."/>
			<param name="config" type="string" doc="Define the driver config to use for this rail."/>
		</struct>

		<!-- root structure of network config -->
		<struct name="networks" doc="Base structure to contain the network configuration">
			<array name="configs" entry-name="config" type="net_driver_config" doc="Define the configuration driver list to reuse in rail definitions."/>
			<array name="rails" entry-name="rail" type="net_rail" doc="List of rails to declare in MPC."/>
		</struct>

	</usertypes>
</config>
<config name="MPC_Profiler">
	<usertypes>
		<struct name="profiler"     doc="Options for the internal MPC Profiler">
			<param name="file_prefix"   type="string" default="mpc_profile" doc="Prefix of MPC Profiler outputs"/>
			<param name="append_date"   type="bool" default="true" doc="Add a timestamp to profiles file names"/>
			<param name="color_stdout"   type="bool" default="true" doc="Profile in color when outputed to stdout"/>
			
			<array name="level_colors" entry-name="level" type="string" doc="Color for levels of profiler output">
				<default>
					<value>#3A4D85</value>
					<value>#82A2FF</value>
					<value>#B8BDCB</value>
					<value>#5D6782</value>
					<value>#838383</value>
					<value>#5A5757</value>
				</default>
			</array>
		</struct>
	</usertypes>
	<modules>
		<module name="profiler" type="profiler"/>
	</modules>
	<validators>
		<handler>sctk_runtime_config_empty_validator_for_test</handler>
	</validators>
</config>
</all>
