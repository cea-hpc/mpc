<?xml version="1.0"?>
<all>
<!--
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - VALAT Sebastien sebastien.valat@cea.fr                           #
#                                                                      #
########################################################################
-->
<config name="MPC_Allocator">
	<usertypes>
		<struct name="allocator"             doc="Options for MPC memory allocator.">
			<!--
			                   !!!!!!  READ THIS BEFORE MODIFY !!!!!!!!!!

			!!!! CAUTION !!!!! Due to initialization steps, we must boostrap egg_allocator with default
			values, so allocator can only use options which can be override on-fly (during the run)
			and must not define fixed parameters.
			There is an exception for all steps which are done after egg_allocator init steps :
			    - NUMA setup and usage
				- Setup allocator of threads (memory source mapping, scope selection....)
			!!!! CAUTION !!!!! If you want to add an array here, you must fix function
			sctk_alloc_config_egg_init().
			!!!! CAUTION !!!!! Up to now default values are replicated into sctk_alloc_config_egg_init()
			don't forget to update it in case of change.
			-->
			<param name="numa_migration"     type="bool"    default="false"    doc="Enable or disable NUMA migration of allocator pages on thread migration."/>
			<param name="realloc_factor"     type="int"     default="2"        doc="If the new segment is less than N time smaller than factor, realloc will allocate a new segment, otherwise it will keep the same one. Use 1 to force realloc every time (may be slower but consume less memory)."/>
			<param name="realloc_threashold" type="size"    default="50MB"     doc="If the new segment is smaller of N bytes than threashold, realloc will allocate a new segment, otherwise it will keep the same one. Use 0 to force realloc every time (may be slower but consume less memory)."/>
			<param name="numa"               type="bool"    default="true"     doc="Permit to enable of disable NUMA support in MPC Allocator."/>
			<!--<param name="scope"              type="string"  default="thread"   doc="Define the scope the posix allocator, can be : process | vp | thread."/>-->
			<param name="strict"             type="bool"    default="false"    doc="If true, enable usage of abort() on free error, otherwise try to continue by skipping."/>
			<param name="keep_mem"           type="size"    default="500MB"     doc="Maximum amount of memory to keep in memory sources (one per NUMA node). Use 0 to disable cache, huge value to keep all."/>
			<param name="keep_max"           type="size"    default="8MB"      doc="Maximum size of macro blocs to keep in memory source for reuse. Use 0 to disable cache, huge value to keep all."/>
		</struct>
	</usertypes>
	<modules>
		<module name="allocator" type="allocator"/>
	</modules>
</config>
<config name="MPC_Common">
	<usertypes>
		<struct name="launcher" doc="Options for MPC launcher.">
			<param name="smt" type="bool" default="false" doc="Enable usage of hyperthreaded cores if available on current architecture."/>
			<param name="cores" type="int" default="1" doc="Default number of cores if -c=X is not given to mpcrun."/>
			<param name="verbosity" type="int" default="0" doc="Default verbosity level from 0 to 3. Can be override by -vv on mpcrun."/>
			<param name="banner" type="bool" default="true" doc="Display the MPC banner at launch time to print some informations about the topology. Can be override by MPC_DISABLE_BANNER."/>
			<param name="autokill" type="int" default="0" doc="Automatically kill the MPC processes after a given timeout. Use 0 to disable. Can be override by MPC_AUTO_KILL_TIMEOUT."/>
			<param name="user_launchers" type="string" default="default" doc="Permit to extend the launchers available via 'mpcrun -l=...' by providing scripts (named mpcrun_XXXX) in a user directory. Can be override by MPC_USER_LAUNCHERS."/>
			<param name="keep_rand_addr" type="bool" default="true" doc="Activate randomization of base addresses"/>
			<param name="disable_rand_addr" type="bool" default="false" doc="Deactivate randomization of base addresses"/>
			<param name="disable_mpc" type="bool" default="false" doc="Do not use mpc for execution (deprecated?)"/>
			<param name="thread_init" type="funcptr" doc="Initialize multithreading mode" default="sctk_use_ethread_mxn"/>
			<param name="nb_task" type="int" default="1" doc="Define the number of MPI tasks"/>
			<param name="nb_process" type="int" default="1" doc="Define the number of MPC processes"/>
			<param name="nb_processor" type="int" default="1" doc="Define the number of virtual processors"/>
			<param name="nb_node" type="int" default="1" doc="Define the number of compute nodes"/>
			<param name="launcher" type="string" default="none" doc="Define which launcher to use"/>
			<param name="max_try" type="int" default="10" doc="Define the max number of tries to access the topology file before failing"/>
			<param name="vers_details" type="bool" default="false" doc="Print the MPC version number"/>
			<param name="profiling" type="string" default="none" doc="Select the type of outputs for the profiling"/>
			<param name="enable_smt" type="bool" default="false" doc="Enable usage of hyperthreaded cores if available on current architecture."/>
			<param name="share_node" type="bool" default="false" doc="Enable the restriction on CPU number to share node"/>
			<param name="restart" type="bool" default="false" doc="Restart MPC from a previous checkpoint"/>
			<param name="checkpoint" type="bool" default="false" doc="Enable MPC checkpointing"/>
			<param name="migration" type="bool" default="false" doc="Enable migration"/>
			<param name="report" type="bool" default="false" doc="Enable reporting."/>
		</struct>
		
		<struct name="debugger" doc="Options for MPC Debugger">
			<param name="colors" type="bool" default="true" doc="Print colored text in terminal"/>
			<param name="max_filename_size" type="int" default="1024" doc=""/>
		</struct>
	</usertypes>
	<modules>
		<module name="launcher" type="launcher"/>
		<module name="debugger" type="debugger"/>
	</modules>
</config>
<config name="MPC_Message_Passing">
	<usertypes>
		<!-- Structure for infiniband driver -->
		<struct name="net_driver_infiniband" doc="Declare a fake driver to test the configuration system.">
			<param name="network_type" type="int" doc="Define a network's type (0=signalization, 1=data)" />
			<param name="adm_port" type="int" doc="Defines the port number to use." default="0" />
			<param name="verbose_level" type="int" doc="Defines the verbose level of the Infiniband interface ." default="0" />
			<param name="eager_limit" type="int" doc="Size of the eager buffers (short messages)." default="12288" />
			<param name="buffered_limit" type="int" doc="Max size for using the Buffered protocol (message split into several Eager messages)." default="262114" />
			<param name="qp_tx_depth" type="int" doc="Number of entries to allocate in the QP for sending messages. If too low, may cause an QP overrun" default="15000" />
			<param name="qp_rx_depth" type="int" doc="Number of entries to allocate in the QP for receiving messages. Must be 0 if using SRQ" default="0" />
			<param name="cq_depth" type="int" doc="Number of entries to allocate in the CQ. If too low, may cause a CQ overrun" default="40000" />
			<param name="max_sg_sq" type="int" doc="Max pending RDMA operations for send" default="4" />
			<param name="max_sg_rq" type="int" doc="Max pending RDMA operations for recv" default="4" />
			<param name="max_inline" type="int" doc="Max size for inlining messages" default="128" />
			<param name="rdma_resizing" type="int" doc="Defines if RDMA connections may be resized." default="0" />
			<param name="max_rdma_connections" type="int" doc="Number of RDMA buffers allocated for each neighbor" default="0" />
			<param name="max_rdma_resizing" type="int" doc="Max number of RDMA buffers resizing allowed" default="0" />
			<param name="init_ibufs" type="int" doc="Max number of Eager buffers to allocate during the initialization step" default="1000" />
			<param name="max_srq_ibufs_posted" type="int" doc="Max number of Eager buffers which can be posted to the SRQ. This number cannot be higher than the number fixed by the HW" default="1500" />
			<param name="max_srq_ibufs" type="int" doc="Max number of Eager buffers which can be used by the SRQ. This number is not fixed by the HW" default="1000" />
			<param name="srq_credit_limit" type="int" doc="Min number of free recv Eager buffers before posting a new buffer." default="500" />
			<param name="srq_credit_thread_limit" type="int" doc="Min number of free recv Eager buffers before the activation of the asynchronous thread. If this thread is activated too many times, the performance may be decreased." default="100" />
			<param name="size_ibufs_chunk" type="int" doc="Number of new buffers allocated when no more buffers are available." default="100" />
			<param name="init_mr" type="int" doc="Number of MMU entries allocated during the MPC initlization." default="400" />
			<param name="size_mr_chunk" type="int" doc="Number of MMU entries allocated when no more MMU entries are available." default="200" />
			<param name="mmu_cache_enabled" type="int" doc="Defines if the MMU cache is enabled." default="1" />
			<param name="mmu_cache_entries" type="int" doc="Defines the number of MMU cache allowed." default="1" />
			<param name="steal" type="int" doc="Defines if the steal in MPI is allowed " default="2" />
			<param name="quiet_crash" type="int" doc="Defines if the Infiniband interface must crash quietly." default="0" />
			<param name="async_thread" type="int" doc="Defines if the asynchronous may be started at the MPC initialization." default="0" />
			<param name="wc_in_number" type="int" doc="Defines the number of entries for the CQ dedicated to received messages." default="0" />
			<param name="wc_out_number" type="int" doc="Defines the number of entries for the CQ dedicated to sent messages." default="0" />
			<param name="rdma_depth" type="int" doc="Number of outstanding RDMA reads and atomic operations on the destination QP (to be confirmed)" default="0" />
			<param name="rdma_dest_depth" type="int" doc="Number of responder resources for handling incoming RDMA reads and atomic operations (to be confirmed)" default="0" />
			<param name="low_memory" type="bool" doc="Defines if the low memory mode should be activated" default="false" />
			<param name="rdvz_protocol" type="ibv_rdvz_protocol" default="IBV_RDVZ_WRITE_PROTOCOL" doc="Defines the Rendezvous protocol to use (IBV_RDVZ_WRITE_PROTOCOL or IBV_RDVZ_READ_PROTOCOL)"/>
		</struct>
		
		<enum name="ibv_rdvz_protocol" doc="">
			<value>IBV_RDVZ_WRITE_PROTOCOL</value>
			<value>IBV_RDVZ_READ_PROTOCOL</value>
		</enum>

		<!-- Structure for TCP driver -->
		<struct name="net_driver_tcp" doc="Declare a fake driver to test the configuration system.">
			<param name="fake_param" type="int" doc="Fake param." default="0" />
		</struct>

		<!-- Union to merge drivers -->
		<union name="net_driver" doc="Define a specific configuration for a network driver to apply in rails.">
			<choice name="infiniband" type="net_driver_infiniband" />
			<choice name="tcp" type="net_driver_tcp" />
			<choice name="tcpoib" type="net_driver_tcp" />
		</union>

		<!-- define a network driver config -->
		<struct name="net_driver_config" doc="Contain a list of driver configuration reused by rail definitions.">
			<param name="name" type="string" doc="Name of the driver configuration to be referenced in rail definitions." />
			<param name="driver" type="net_driver" doc="Define the related driver to use and its configuration." />
		</struct>

		<!-- Structure for cli_option -->
		<struct name="net_cli_option" doc="Define a specific configuration for a network provided by '-net'.">
			<param name="name" type="string" doc="Define the name of the option." />
			<array name="rails" entry-name="rail" type="string" doc="Define the driver config to use for this rail." />
		</struct>

		<!-- Structure for rail definition -->
		<struct name="net_rail" doc="Define a rail which is a name, a device associate to a driver and a routing topology.">
			<param name="name" type="string" doc="Define the name of current rail." />
			<param name="device" type="string" doc="Define the name of the device to use in this rail." />
			<param name="topology" type="string" doc="Define the network topology to apply on this rail." />
			<param name="config" type="string" doc="Define the driver config to use for this rail." />
		</struct>

		<!-- root structure of network config -->
		<struct name="networks" doc="Base structure to contain the network configuration">
			<array name="configs" entry-name="config" type="net_driver_config" doc="Define the configuration driver list to reuse in rail definitions." />
			<array name="rails" entry-name="rail" type="net_rail" doc="List of rails to declare in MPC." />
			<array name="cli_options" entry-name="cli_option" type="net_cli_option" doc="List of networks available through the '-net' argument of mpcrun." />
		</struct>
		
		<struct name="inter_thread_comm" doc="Options for communication between threads">
			<param name="barrier_arity" type="int" default="8" doc=""/>
			<param name="broadcast_arity_max" type="int" default="32" doc=""/>
			<param name="broadcast_max_size" type="int" default="1024" doc=""/>
			<param name="broadcast_check_threshold" type="int" default="512" doc=""/>
			<param name="allreduce_arity_max" type="int" default="8" doc=""/>
			<param name="allreduce_max_size" type="int" default="1024" doc=""/>
			<param name="allreduce_check_threshold" type="int" default="8192" doc=""/>
		</struct>
		
		<struct name="low_level_comm" doc="">
			<param name="checksum" type="bool" default="true" doc=""/>
			<param name="send_msg" type="funcptr" default="sctk_network_send_message_default" doc=""/>
			<param name="notify_recv_msg" type="funcptr" default="sctk_network_notify_recv_message_default" doc=""/>
			<param name="notify_matching_msg" type="funcptr" default="sctk_network_notify_matching_message_default" doc=""/>
			<param name="notify_perform_msg" type="funcptr" default="sctk_network_notify_perform_message_default" doc=""/>
			<param name="notify_idle_msg" type="funcptr" default="sctk_network_notify_idle_message_default" doc=""/>
			<param name="notify_any_src_msg" type="funcptr" default="sctk_network_notify_any_source_message_default" doc=""/>
			<param name="network_mode" type="string" default="default" doc=""/>
			<param name="dyn_reordering" type="bool" default="false" doc=""/>
		</struct>
		
		<struct name="mpc" doc="Options for MPC Message Passing">
			<param name="log_debug" type="bool" default="false" doc="Print debug messages"/>
			<param name="hard_checking" type="bool" default="false" doc=""/>
			<param name="buffering" type="bool" default="false" doc=""/>
		</struct>
	</usertypes>
	<modules>
		<module name="inter_thread_comm" type="inter_thread_comm" />
		<module name="low_level_comm" type="low_level_comm" />
		<module name="mpc" type="mpc"/>
	</modules>
</config>
<config name="MPC_OpenMP">
	<usertypes>
		<struct name="openmp" doc="Options for MPC OpenMP.">
			<param name="vp" type="int" doc="Number of VPs for each OpenMP team"/>
			<param name="schedule" type="string" default="static" doc="Runtime schedule type and chunck size"/>
			<param name="nb_threads" type="int" doc="Number of threads to use during execution"/>
			<param name="adjustment" type="bool" default="false" doc="Dynamic adjustment of the number of threads"/>
			<param name="nested" type="bool" default="false" doc="Nested parallelism"/>
			<param name="max_threads" type="int" default="64" doc="Maximum number of threads for each team of a parallel region"/>
			<param name="max_alive_for_dyn" type="int" default="7" doc="Maximum number of shared for loops w/ dynamic schedule alive"/>
			<param name="max_alive_for_guided" type="int" default="3" doc="Maximum number of shared for loops w/ guided schedule alive"/>
			<param name="max_alive_sections" type="int" default="3" doc="Maximum number of alive sections construct"/>
			<param name="max_alive_single" type="int" default="3" doc="Maximum number of alive single construct"/>
		</struct>
	</usertypes>
	<modules>
		<module name="openmp" type="openmp"/>
	</modules>
</config>
<config name="MPC_Profiler">
	<usertypes>
		<struct name="profiler"     doc="Options for the internal MPC Profiler">
			<param name="file_prefix"   type="string" default="mpc_profile" doc="Prefix of MPC Profiler outputs"/>
			<param name="append_date"   type="bool" default="true" doc="Add a timestamp to profiles file names"/>
			<param name="color_stdout"   type="bool" default="true" doc="Profile in color when outputed to stdout"/>
			
			<array name="level_colors" entry-name="level" type="string" doc="Color for levels of profiler output">
				<default>
					<value>#3A4D85</value>
					<value>#82A2FF</value>
					<value>#B8BDCB</value>
					<value>#5D6782</value>
					<value>#838383</value>
					<value>#5A5757</value>
				</default>
			</array>
		</struct>
	</usertypes>
	<modules>
		<module name="profiler" type="profiler"/>
	</modules>
	<validators>
		<handler>sctk_runtime_config_empty_validator_for_test</handler>
	</validators>
</config>
<config name="MPC_Threads">
	<usertypes>
		<struct name="thread" doc="Options for MPC threads.">
			<param name="spin_delay" type="int" default="10" doc="Max number of accesses to the lock before calling thread_yield"/>
			<param name="interval" type="int" default="10" doc=""/>
			<param name="kthread_stack_size" type="size" default="10MB" doc="Define the stack size of MPC user threads"/>
		</struct>
	</usertypes>
	<modules>
		<module name="thread" type="thread"/>
	</modules>
</config>
</all>
