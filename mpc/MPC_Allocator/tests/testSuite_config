#!/bin/sh

#import deps
. ${MPC_TEST_SOURCE_DIR}/UnitTests/tools/helper_svunittest.sh

#sources of the allocator without posix export
ALLOC_SOURCE_PATH="${MPC_TEST_SOURCE_DIR}/../mpc/MPC_Allocator/src"
ALLOC_SOURCES="${ALLOC_SOURCE_PATH}/sctk_alloc_common.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_debug.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_light_mm_source.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_posix.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_spy.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_stats.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_topology.c \
	${ALLOC_SOURCE_PATH}/sctk_allocator.c \
	${ALLOC_SOURCE_PATH}/sctk_alloc_numa_stat.c"

#recompile the allocator without NUMA support
helper_insert_test "compile_MPC_Allocator_uma" "0" "gcc -fPIC -Wall -g -shared ${ALLOC_SOURCES} \
	-DMPC_ALLOCATOR_DISABLE_STATIC -o ${MPC_TEST_CURRENT_WORK_DIR}/executables/liballoc-uma.so \
	-lpthread"

#recompile the allocator with NUMA support
HWLOC_PREFIX=${MPC_INSTALL_PREFIX}/mpc-hwloc-1.3/
HWLOC_CFLAGS="-I${MPC_INSTALL_PREFIX}/mpc-hwloc-1.3/include"
HWLOC_LDFLAGS="-L${MPC_INSTALL_PREFIX}/mpc-hwloc-1.3/lib -lhwloc -Wl,-rpath,${MPC_INSTALL_PREFIX}/mpc-hwloc-1.3/lib"
helper_insert_test "compile_MPC_Allocator_numa" "0" "gcc -fPIC -Wall -g -shared ${ALLOC_SOURCES} -DMPC_ALLOCATOR_DISABLE_STATIC -DHAVE_HWLOC ${HWLOC_CFLAGS} ${HWLOC_LDFLAGS} -o ${MPC_TEST_CURRENT_WORK_DIR}/executables/liballoc-numa.so -lpthread"

#setup svunittest
helper_use_svunittest

#list of tests
ALLOC_TESTS="test_allocated_chunk \
	test_light_mm_src \
	test_rfq test_chunk_padding \
	test_mm_source_default \
	test_thread_pool \
	test_default_alloc_chain \
	test_posix_malloc \
	test_user_alloc_chain \
	test_full_alloc_chain \
	test_regions"

#loop on tests
MPC_ALLOC_CFLAGS="-I${MPC_TEST_SOURCE_DIR}/../mpc/MPC_Allocator/src -DMPC_ALLOCATOR_DISABLE_STATIC"
MPC_ALLOC_LDFLAGS="-L${MPC_TEST_CURRENT_WORK_DIR}/executables/ -Wl,-rpath,${MPC_TEST_CURRENT_WORK_DIR}/executables/"
for test in $ALLOC_TESTS
do
	for mode in uma numa
	do
		compile_command="g++ -g -Wall ${CFLAGS} ${MPC_ALLOC_CFLAGS} ${MPC_ALLOC_LDFLAGS} ${MPC_TEST_CURRENT_SOURCE_DIR}/${test}.cpp ${LDFLAGS} -o ${MPC_TEST_CURRENT_WORK_DIR}/executables/${test}_${mode} -lalloc-${mode} -fopenmp"
		helper_insert_test "${test}_${mode}" "0" "${compile_command} && ${MPC_TEST_CURRENT_WORK_DIR}/executables/${test}_${mode} -m junit_xml -o output-${test}_${mode}.xml" "compile_MPC_Allocator_${mode}"
	done
done
