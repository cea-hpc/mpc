#!/bin/sh
############################# MPC License ##############################
# Wed Nov 19 15:19:19 CET 2008                                         #
# Copyright or (C) or Copr. Commissariat a l'Energie Atomique          #
#                                                                      #
# IDDN.FR.001.230040.000.S.P.2007.000.10000                            #
# This file is part of the MPC Runtime.                                #
#                                                                      #
# This software is governed by the CeCILL-C license under French law   #
# and abiding by the rules of distribution of free software.  You can  #
# use, modify and/ or redistribute the software under the terms of     #
# the CeCILL-C license as circulated by CEA, CNRS and INRIA at the     #
# following URL http://www.cecill.info.                                #
#                                                                      #
# The fact that you are presently reading this means that you have     #
# had knowledge of the CeCILL-C license and that you accept its        #
# terms.                                                               #
#                                                                      #
# Authors:                                                             #
#   - PERACHE Marc marc.perache@cea.fr                                 #
#   - CARRIBAULT Patrick patrick.carribault@cea.fr                     #
#                                                                      #
########################################################################


MPC_DIR="`dirname $0`/"
cd $MPC_DIR
cd ../
MPC_DIR="`pwd`/"

TMP_DIR="/tmp/`whoami`_mpc_export_$$"

mkdir -p $TMP_DIR

cd $TMP_DIR
cp -Lr $MPC_DIR/* .

my_rm(){
    echo "    Remove $@"
    rm -rf $@
}

echo "Exporting the Open-Source Edition in directory ${TMP_DIR}"
# Copy of the readme to the top directory
echo "## COPY EXTRA FILES ##"
cp ./mpc/MPC_Doc/readme.pdf README.pdf


echo "## REMOVE TEMPORARY FILES ##"
# Files w/ '~'
for i in `find . | grep "~"`; do
my_rm $i;
done

# Files ending with ".swp"
for i in `find . | grep -E "\.sw.$"` ; do
my_rm $i;
done

echo "## REMOVE NON OSE MODULES ##"
rm tools/create_ose
for i in MPC_Accelerators MPC_Virtual_Machines  PRIVATE_MPC_Tests ; do
my_rm mpc/$i
my_rm ./mpc/MPC_Tests/*/$i
done
my_rm mpc-check
my_rm MPC_Test_Suite
my_rm .git
my_rm mpc/MPC_Tools/mpcrun_opt/mpcrun_cea_mprun mpc/list_of_files

# my_rm mpc-gcc/VERSIONS
# echo "Warning: please re-create the mpc-gcc/VERSIONS file before distribution"

echo "## REMOVE NON-OSE PARTS ##"
cat <<EOF > remove.c
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define taille (4*1024*1024)
char buffer[taille];

#define N 11
char * keep[N];
int line_nb=0;

void check_ose(char* tmp){
    int i;
    for(i = 0; i < N; i++){
        if(strstr(tmp, "PRIVATE_MPC_Tests") == NULL){
        if(strstr(tmp, keep[i]) != NULL){
          fprintf(stderr,"\tWARNING remove part %s line %d : %s\n",keep[i],line_nb,tmp);
        }
}
    }
}

int main(){
  char* tmp;
    int i;
    for(i = 0; i < N; i++){
keep[i] = "";
}

  keep[0] = "MPC_Allocator";
  keep[1] = "MPC_Common";
  keep[2] = "MPC_Debugger";
  keep[3] = "MPC_Doc";
  keep[4] = "MPC_MPI";
  keep[5] = "MPC_Message_Passing";
  keep[6] = "MPC_Microthreads";
  keep[7] = "MPC_OpenMP";
  keep[8] = "MPC_Profiler";
  keep[9] = "MPC_Tests";
  keep[10] = "MPC_Threads";

  int skip_line = 0;
  tmp = fgets(buffer,taille,stdin);
line_nb++;
  while(tmp != NULL){
    if(strstr(tmp, "##### START REMOVE IN OSE ####") != NULL){
      skip_line = 1;
    }
    if(skip_line == 0){
      printf("%s",tmp);
    } else {
      check_ose(tmp);
    }
    if(strstr(tmp, "##### END REMOVE IN OSE ####") != NULL){
      skip_line = 0;
    }
    tmp = fgets(buffer,taille,stdin);
line_nb++;
  }
  return 0;
}

EOF

gcc remove.c -o remove

mkdir -p tmp
for i in `find mpc/` ; do
    res="`grep -nr \"##### START REMOVE IN OSE ####\" $i`"
    if test -f $i ; then
	if test "$res" != "" ; then
	    echo "    Remove non-OSE parts in $i"
	    cat $i | ./remove > tmp/`whoami`_`basename $i`
	    cp tmp/`whoami`_`basename $i` $i
	fi
    fi
done

my_rm remove.c remove
my_rm tmp

find . > list_of_files

echo "## REMOVE NON OSE MODULES ##"
for j in /m3/ /cea/S/; do
echo "Search $j word"
    grep -nri $j ./ #mpc/
    if test "$?" = "0" ;then
	echo "Unable to export MPC OSE"
	exit 1
    fi
done

echo "Exportation DONE!"
